[{"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\index.js":"1","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\store.js":"2","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\App.js":"4","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\orderReducers.js":"6","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\wishListReducer.js":"8","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\cartReducers.js":"9","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\HomeScreen.jsx":"10","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Footer.jsx":"11","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Header.jsx":"12","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductScreen.jsx":"13","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\RegisterScreen.jsx":"14","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ShippingScreen.jsx":"15","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\CartScreen.jsx":"16","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProfileScreen.jsx":"17","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\UserListScreen.jsx":"18","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\PaymentMethodScreen.jsx":"19","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\LoginScreen.jsx":"20","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"21","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\UserEditScreen.jsx":"22","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\OrderListScreen.jsx":"23","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\OrderScreen.jsx":"24","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductEditScreen.jsx":"25","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductListScreen.jsx":"26","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\WishListScreen.jsx":"27","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\orderConstants.js":"28","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\userConstants.js":"29","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\cartConstants.js":"30","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\productConstants.js":"31","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\wishListConstants.js":"32","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\wishListActions.js":"33","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\productActions.js":"34","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\orderActions.js":"35","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\userActions.js":"36","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\cartActions.js":"37","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Paginate.jsx":"38","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Meta.jsx":"39","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Product.jsx":"40","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Rating.jsx":"41","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Message.jsx":"42","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\ProductCarousel.jsx":"43","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\SearchBox.jsx":"44","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\FormContainer.jsx":"45","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\ChecoutSteps.jsx":"46","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Favorites.jsx":"47","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\loaders\\Loader.jsx":"48","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\loaders\\LoaderPayment.jsx":"49"},{"size":596,"mtime":1612963375248,"results":"50","hashOfConfig":"51"},{"size":2791,"mtime":1615982301535,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"51"},{"size":3213,"mtime":1615551683160,"results":"54","hashOfConfig":"51"},{"size":4678,"mtime":1615975488909,"results":"55","hashOfConfig":"51"},{"size":4353,"mtime":1616076700463,"results":"56","hashOfConfig":"51"},{"size":3896,"mtime":1614772388893,"results":"57","hashOfConfig":"51"},{"size":1117,"mtime":1615547363364,"results":"58","hashOfConfig":"51"},{"size":1502,"mtime":1615309922900,"results":"59","hashOfConfig":"51"},{"size":2720,"mtime":1616055999439,"results":"60","hashOfConfig":"51"},{"size":2846,"mtime":1614195625244,"results":"61","hashOfConfig":"51"},{"size":4884,"mtime":1616064194369,"results":"62","hashOfConfig":"51"},{"size":12929,"mtime":1616055999413,"results":"63","hashOfConfig":"51"},{"size":4146,"mtime":1616055999465,"results":"64","hashOfConfig":"51"},{"size":3034,"mtime":1615828063546,"results":"65","hashOfConfig":"51"},{"size":4876,"mtime":1615985923911,"results":"66","hashOfConfig":"51"},{"size":7093,"mtime":1616055999280,"results":"67","hashOfConfig":"51"},{"size":3103,"mtime":1616055999190,"results":"68","hashOfConfig":"51"},{"size":2177,"mtime":1614344977526,"results":"69","hashOfConfig":"51"},{"size":2537,"mtime":1616064221098,"results":"70","hashOfConfig":"51"},{"size":6545,"mtime":1616089659968,"results":"71","hashOfConfig":"51"},{"size":4509,"mtime":1616055999218,"results":"72","hashOfConfig":"51"},{"size":2965,"mtime":1616055999328,"results":"73","hashOfConfig":"51"},{"size":9010,"mtime":1616091334455,"results":"74","hashOfConfig":"51"},{"size":7425,"mtime":1616055999160,"results":"75","hashOfConfig":"51"},{"size":4875,"mtime":1616055999354,"results":"76","hashOfConfig":"51"},{"size":4619,"mtime":1615985846789,"results":"77","hashOfConfig":"51"},{"size":1267,"mtime":1616060044494,"results":"78","hashOfConfig":"51"},{"size":1512,"mtime":1614772249509,"results":"79","hashOfConfig":"51"},{"size":288,"mtime":1615309922910,"results":"80","hashOfConfig":"51"},{"size":1762,"mtime":1615825032409,"results":"81","hashOfConfig":"51"},{"size":172,"mtime":1615546937397,"results":"82","hashOfConfig":"51"},{"size":1117,"mtime":1615982252266,"results":"83","hashOfConfig":"51"},{"size":5642,"mtime":1615975488877,"results":"84","hashOfConfig":"51"},{"size":5539,"mtime":1616090884682,"results":"85","hashOfConfig":"51"},{"size":7239,"mtime":1616058313451,"results":"86","hashOfConfig":"51"},{"size":1548,"mtime":1615550811161,"results":"87","hashOfConfig":"51"},{"size":984,"mtime":1614965970832,"results":"88","hashOfConfig":"51"},{"size":537,"mtime":1615016364823,"results":"89","hashOfConfig":"51"},{"size":1170,"mtime":1616002884248,"results":"90","hashOfConfig":"51"},{"size":1806,"mtime":1612421938315,"results":"91","hashOfConfig":"51"},{"size":318,"mtime":1614605325717,"results":"92","hashOfConfig":"51"},{"size":1456,"mtime":1616055999303,"results":"93","hashOfConfig":"51"},{"size":927,"mtime":1616070985124,"results":"94","hashOfConfig":"51"},{"size":397,"mtime":1614862970326,"results":"95","hashOfConfig":"51"},{"size":1824,"mtime":1615578340181,"results":"96","hashOfConfig":"51"},{"size":1492,"mtime":1616005690461,"results":"97","hashOfConfig":"51"},{"size":522,"mtime":1613054677346,"results":"98","hashOfConfig":"51"},{"size":502,"mtime":1616057329077,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"ilossn",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\index.js",[],["207","208"],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\store.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\App.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\productReducers.js",["209","210","211","212"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_REVIEW_DELETE_REQUEST,\r\n    PRODUCT_REVIEW_DELETE_SUCCESS,\r\n    PRODUCT_REVIEW_DELETE_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = {products:[]}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product: { reviews: [] }}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product:{} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewDeleteReducer = (state = { }, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_REVIEW_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_REVIEW_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_REVIEW_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload}\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\wishListReducer.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\HomeScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Footer.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Header.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\RegisterScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ShippingScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\CartScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProfileScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\UserListScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\PaymentMethodScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\LoginScreen.jsx",["213"],"import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../loaders/Loader\";\r\nimport {login} from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport LoaderPayment from \"../loaders/LoaderPayment\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state => state.userLogin))\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.name) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeHolder='Enter mail'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeHolder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                   />\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\PlaceOrderScreen.jsx",["214","215"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CheckoutSteps from \"../components/ChecoutSteps\";\r\nimport {Button, Card, Col, Image, ListGroup, Row} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { createOrder } from '../actions/orderActions'\r\nimport {ORDER_CREATE_RESET, ORDER_PAY_RESET} from \"../constants/orderConstants\";\r\n\r\n\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n// Calculate price\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, success, error} = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            console.log(\"*****\", order._id)\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    },[history, success, order])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p style={{display:'flex', flexDirection:'column'}}>\r\n                                <strong>Address: </strong>\r\n                                <span>{cart.shippingAddress.address}</span>\r\n                                <span>{cart.shippingAddress.city}</span>\r\n                                <span>{cart.shippingAddress.postalCode}</span>\r\n                                <span>{cart.shippingAddress.country}</span>\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && (<Message variant='danger'>{error}</Message>)}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0}\r\n                                        onClick={placeOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\UserEditScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\OrderListScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\OrderScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductEditScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductListScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\WishListScreen.jsx",["216","217"],"import React, {useEffect, forwardRef} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Button, Col, Form, Image, ListGroup, Row} from 'react-bootstrap'\r\nimport FlipMove from 'react-flip-move';\r\nimport Message from '../components/Message'\r\nimport Product from \"../components/Product\";\r\nimport {addToWishList, removeFromWishList} from \"../actions/wishListActions\";\r\nimport {addToCart} from \"../actions/cartActions\";\r\n\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const wishlistStore = useSelector(state => state.productWishList)\r\n    const {wishlist} = wishlistStore;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToWishList(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromWishListHandler = (id) => {\r\n        dispatch (removeFromWishList(id))\r\n    }\r\n\r\n    const addToCartHandler = (productId) => {\r\n        history.push(`/cart/${productId}?qty=${qty}`)\r\n    }\r\n\r\n\r\n    forwardRef((item, ref) => (\r\n        <div ref={ref}>\r\n            <Product\r\n                key={item.cartId}\r\n                id={item.id}\r\n                title={item.name}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n                {...item}/>\r\n\r\n        </div>\r\n    ));\r\n\r\n    return<Row>\r\n        <Col md={10}>\r\n            <h1>Wishlist</h1>\r\n            {wishlist.length === 0 ?\r\n                (<Message>\r\n                        Your wishlist is empty! <Link to=\"/\">Go back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <Row variant='flush'>\r\n                        <FlipMove>\r\n                            {wishlist.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={3} className='m-auto'> <Link to={`/product/${item.product}`}>{item.name}</Link></Col>\r\n                                        <Col md={2} className='m-auto'>${item.price}</Col>\r\n                                        {/*<Col md={2}>*/}\r\n                                        {/*    <Form.Control as='select' value={item.qty} onChange={(e) =>*/}\r\n                                        {/*    dispatch(addToCart(item.product, Number(e.target.value)))}>*/}\r\n                                        {/*    {[...Array(item.countInStock).keys()].map((x) => (*/}\r\n                                        {/*        <option key={x + 1} value={x + 1}>*/}\r\n                                        {/*            {x + 1}*/}\r\n                                        {/*        </option>*/}\r\n                                        {/*    ))}*/}\r\n                                        {/*</Form.Control>*/}\r\n                                        {/*</Col>*/}\r\n                                        <Col md={2} className='m-auto'>\r\n                                            <Button\r\n                                                onClick={(e) => addToCartHandler(item.product)}\r\n                                                className='btn-block' type='button'\r\n                                                disabled={item.countInStock === 0}>\r\n                                                Buy now\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={1} className='m-auto'>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromWishListHandler(item.product)}>\r\n                                                <i className='fas fa-trash'/>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </FlipMove>\r\n                    </Row>\r\n                )}\r\n        </Col>\r\n\r\n\r\n    </Row>\r\n\r\n}\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\wishListConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\wishListActions.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\productActions.js",["218","219","220"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const listProducts = (keyword='', pageNumber= '') => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        })\r\n        const {data} = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST\r\n        })\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        await axios.delete(`/api/products/${id}`, config)\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n       const { data } = await axios.post(`/api/products`, {}, config)\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review ) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_TOP_REQUEST\r\n        })\r\n        const {data} = await axios.get(`/api/products/top`)\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\orderActions.js",["221"],"import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL, ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants'\r\nimport axios from \"axios\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        // dispatch({\r\n        //     type: ORDER_CREATE_RESET\r\n        // })\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.post(`/api/orders`, order, config)\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.get(`/api/orders/${id}`, config)\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.get(`/api/orders/myorders`, config)\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.get(`/api/orders`, config)\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\userActions.js",["222","223"],"import {\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST, USER_DELETE_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST, USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS, USER_UPDATE_FAIL,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport {ORDER_LIST_MY_RESET} from \"../constants/orderConstants\";\r\nimport {WISHLIST_RESET_ITEM} from \"../constants/wishListConstants\";\r\nimport {CART_RESET_ITEM} from \"../constants/cartConstants\";\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const {data} = await axios.post('api/users/login', {email, password}, config)\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo' )\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, surname, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const {data} = await axios.post('api/users', {name, surname, email, password}, config)\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.get(`/api/users/${id}`, config)\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.put(`/api/users/profile`, user, config)\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.get(`/api/users`, config)\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        await axios.delete(`/api/users/${id}`, config)\r\n        dispatch({type: USER_DELETE_SUCCESS})\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n        const {userLogin: {userInfo}} = getState()\r\n        const config = {\r\n            headers: {\r\n               'Content-Type' : 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n      const { data } =  await axios.put(`/api/users/${user._id}`, user, config)\r\n        dispatch({type: USER_UPDATE_SUCCESS})\r\n        dispatch({type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Paginate.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Meta.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Product.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Rating.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Message.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\ProductCarousel.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\SearchBox.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\FormContainer.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\ChecoutSteps.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Favorites.jsx",[],["224","225"],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\loaders\\Loader.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\loaders\\LoaderPayment.jsx",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":5,"nodeType":"232","messageId":"233","endLine":23,"endColumn":34},{"ruleId":"230","severity":1,"message":"234","line":24,"column":5,"nodeType":"232","messageId":"233","endLine":24,"endColumn":34},{"ruleId":"230","severity":1,"message":"235","line":25,"column":5,"nodeType":"232","messageId":"233","endLine":25,"endColumn":31},{"ruleId":"230","severity":1,"message":"236","line":26,"column":5,"nodeType":"232","messageId":"233","endLine":26,"endColumn":32},{"ruleId":"230","severity":1,"message":"237","line":9,"column":8,"nodeType":"232","messageId":"233","endLine":9,"endColumn":21},{"ruleId":"230","severity":1,"message":"238","line":8,"column":9,"nodeType":"232","messageId":"233","endLine":8,"endColumn":27},{"ruleId":"230","severity":1,"message":"239","line":8,"column":29,"nodeType":"232","messageId":"233","endLine":8,"endColumn":44},{"ruleId":"230","severity":1,"message":"240","line":4,"column":22,"nodeType":"232","messageId":"233","endLine":4,"endColumn":26},{"ruleId":"230","severity":1,"message":"241","line":9,"column":9,"nodeType":"232","messageId":"233","endLine":9,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":23,"column":5,"nodeType":"232","messageId":"233","endLine":23,"endColumn":34},{"ruleId":"230","severity":1,"message":"234","line":23,"column":36,"nodeType":"232","messageId":"233","endLine":23,"endColumn":65},{"ruleId":"230","severity":1,"message":"235","line":23,"column":67,"nodeType":"232","messageId":"233","endLine":23,"endColumn":93},{"ruleId":"230","severity":1,"message":"238","line":19,"column":25,"nodeType":"232","messageId":"233","endLine":19,"endColumn":43},{"ruleId":"230","severity":1,"message":"242","line":20,"column":9,"nodeType":"232","messageId":"233","endLine":20,"endColumn":28},{"ruleId":"230","severity":1,"message":"243","line":21,"column":9,"nodeType":"232","messageId":"233","endLine":21,"endColumn":24},{"ruleId":"226","replacedBy":"244"},{"ruleId":"228","replacedBy":"245"},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'PRODUCT_UPDATE_REVIEW_REQUEST' is defined but never used.","Identifier","unusedVar","'PRODUCT_UPDATE_REVIEW_SUCCESS' is defined but never used.","'PRODUCT_UPDATE_REVIEW_FAIL' is defined but never used.","'PRODUCT_UPDATE_REVIEW_RESET' is defined but never used.","'LoaderPayment' is defined but never used.","'ORDER_CREATE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'Form' is defined but never used.","'addToCart' is defined but never used.","'WISHLIST_RESET_ITEM' is defined but never used.","'CART_RESET_ITEM' is defined but never used.",["246"],["247"],"no-global-assign","no-unsafe-negation"]