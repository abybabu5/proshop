[{"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\index.js":"1","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\store.js":"2","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\App.js":"4","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\orderReducers.js":"6","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\wishListReducer.js":"8","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\cartReducers.js":"9","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\HomeScreen.jsx":"10","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Footer.jsx":"11","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Header.jsx":"12","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductScreen.jsx":"13","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\RegisterScreen.jsx":"14","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ShippingScreen.jsx":"15","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\CartScreen.jsx":"16","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProfileScreen.jsx":"17","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\UserListScreen.jsx":"18","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\PaymentMethodScreen.jsx":"19","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\LoginScreen.jsx":"20","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"21","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\UserEditScreen.jsx":"22","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\OrderListScreen.jsx":"23","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\OrderScreen.jsx":"24","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductEditScreen.jsx":"25","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductListScreen.jsx":"26","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\WishListScreen.jsx":"27","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\orderConstants.js":"28","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\userConstants.js":"29","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\cartConstants.js":"30","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\productConstants.js":"31","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\wishListConstants.js":"32","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\wishListActions.js":"33","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\productActions.js":"34","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\orderActions.js":"35","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\userActions.js":"36","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\cartActions.js":"37","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Paginate.jsx":"38","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Meta.jsx":"39","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Product.jsx":"40","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Rating.jsx":"41","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Message.jsx":"42","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\ProductCarousel.jsx":"43","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\SearchBox.jsx":"44","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\FormContainer.jsx":"45","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\ChecoutSteps.jsx":"46","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Favorites.jsx":"47","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\loaders\\Loader.jsx":"48","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\loaders\\LoaderPayment.jsx":"49","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\VerifyEmailScreen.jsx":"50","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\StripeContainer.jsx":"51","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\PaymentForm.jsx":"52"},{"size":596,"mtime":1612963375248,"results":"53","hashOfConfig":"54"},{"size":2791,"mtime":1615982301535,"results":"55","hashOfConfig":"54"},{"size":362,"mtime":499162500000,"results":"56","hashOfConfig":"54"},{"size":3354,"mtime":1616748276806,"results":"57","hashOfConfig":"54"},{"size":4678,"mtime":1615975488909,"results":"58","hashOfConfig":"54"},{"size":4353,"mtime":1616076700463,"results":"59","hashOfConfig":"54"},{"size":3896,"mtime":1614772388893,"results":"60","hashOfConfig":"54"},{"size":1117,"mtime":1615547363364,"results":"61","hashOfConfig":"54"},{"size":1502,"mtime":1615309922900,"results":"62","hashOfConfig":"54"},{"size":2720,"mtime":1616055999439,"results":"63","hashOfConfig":"54"},{"size":2846,"mtime":1614195625244,"results":"64","hashOfConfig":"54"},{"size":4884,"mtime":1616064194369,"results":"65","hashOfConfig":"54"},{"size":13057,"mtime":1616849352443,"results":"66","hashOfConfig":"54"},{"size":4145,"mtime":1616422295463,"results":"67","hashOfConfig":"54"},{"size":3034,"mtime":1615828063546,"results":"68","hashOfConfig":"54"},{"size":4876,"mtime":1615985923911,"results":"69","hashOfConfig":"54"},{"size":7093,"mtime":1616055999280,"results":"70","hashOfConfig":"54"},{"size":3103,"mtime":1616055999190,"results":"71","hashOfConfig":"54"},{"size":2159,"mtime":1616437106331,"results":"72","hashOfConfig":"54"},{"size":2812,"mtime":1616429567325,"results":"73","hashOfConfig":"54"},{"size":6463,"mtime":1616247621280,"results":"74","hashOfConfig":"54"},{"size":4509,"mtime":1616055999218,"results":"75","hashOfConfig":"54"},{"size":2965,"mtime":1616055999328,"results":"76","hashOfConfig":"54"},{"size":9392,"mtime":1616760293580,"results":"77","hashOfConfig":"54"},{"size":7425,"mtime":1616055999160,"results":"78","hashOfConfig":"54"},{"size":4875,"mtime":1616055999354,"results":"79","hashOfConfig":"54"},{"size":4564,"mtime":1616247621312,"results":"80","hashOfConfig":"54"},{"size":1267,"mtime":1616060044494,"results":"81","hashOfConfig":"54"},{"size":1512,"mtime":1614772249509,"results":"82","hashOfConfig":"54"},{"size":288,"mtime":1615309922910,"results":"83","hashOfConfig":"54"},{"size":1762,"mtime":1615825032409,"results":"84","hashOfConfig":"54"},{"size":172,"mtime":1615546937397,"results":"85","hashOfConfig":"54"},{"size":1117,"mtime":1615982252266,"results":"86","hashOfConfig":"54"},{"size":6596,"mtime":1616849352468,"results":"87","hashOfConfig":"54"},{"size":5519,"mtime":1616421985154,"results":"88","hashOfConfig":"54"},{"size":7173,"mtime":1616431238128,"results":"89","hashOfConfig":"54"},{"size":1548,"mtime":1615550811161,"results":"90","hashOfConfig":"54"},{"size":984,"mtime":1614965970832,"results":"91","hashOfConfig":"54"},{"size":537,"mtime":1615016364823,"results":"92","hashOfConfig":"54"},{"size":1170,"mtime":1616002884248,"results":"93","hashOfConfig":"54"},{"size":1806,"mtime":1612421938315,"results":"94","hashOfConfig":"54"},{"size":318,"mtime":1614605325717,"results":"95","hashOfConfig":"54"},{"size":1456,"mtime":1616055999303,"results":"96","hashOfConfig":"54"},{"size":927,"mtime":1616070985124,"results":"97","hashOfConfig":"54"},{"size":397,"mtime":1614862970326,"results":"98","hashOfConfig":"54"},{"size":2180,"mtime":1616836824930,"results":"99","hashOfConfig":"54"},{"size":1492,"mtime":1616005690461,"results":"100","hashOfConfig":"54"},{"size":522,"mtime":1613054677346,"results":"101","hashOfConfig":"54"},{"size":502,"mtime":1616057329077,"results":"102","hashOfConfig":"54"},{"size":600,"mtime":1616412344028,"results":"103","hashOfConfig":"54"},{"size":563,"mtime":1616504187287,"results":"104","hashOfConfig":"54"},{"size":3424,"mtime":1616836782956,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"ilossn",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\index.js",[],["216","217"],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\store.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\App.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\productReducers.js",["218","219","220","221"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_REVIEW_DELETE_REQUEST,\r\n    PRODUCT_REVIEW_DELETE_SUCCESS,\r\n    PRODUCT_REVIEW_DELETE_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = {products:[]}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product: { reviews: [] }}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product:{} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { }, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewDeleteReducer = (state = { }, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_REVIEW_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_REVIEW_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_REVIEW_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload}\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\wishListReducer.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\HomeScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Footer.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Header.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductScreen.jsx",["222"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Button, Card, Col, Image, ListGroup, Row, Form} from \"react-bootstrap\"\r\nimport {listProductDetails, createProductReview, productReviewDelete} from '../actions/productActions'\r\nimport Rating from '../components/Rating'\r\nimport Loader from \"../loaders/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from '../components/Meta'\r\nimport {PRODUCT_CREATE_REVIEW_RESET, PRODUCT_REVIEW_DELETE_SUCCESS} from \"../constants/productConstants\"\r\nimport {addToWishList, removeFromWishList} from \"../actions/wishListActions\";\r\n\r\n\r\n\r\nconst ProductScreen = ({history, match}) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n    const {success: successProductReview, error: errorProductReview} = productReviewCreate\r\n\r\n    const wishlistStore = useSelector(state => state.productWishList)\r\n    const {wishlist} = wishlistStore;\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        setTimeout(() => window.scrollTo({top: 0, behavior: \"smooth\"}),\r\n            dispatch(listProductDetails(match.params.id)), 100);\r\n    }, [dispatch, match, successProductReview])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(productDetails)\r\n        if (productDetails.product.reviews && userInfo && userInfo._id) {\r\n            const myReview = productDetails.product.reviews.find((r) => r.user && userInfo._id === r.user._id);\r\n            if (myReview) {\r\n                setRating(myReview.rating);\r\n                setComment(myReview.comment);\r\n            }\r\n        }\r\n    }, [productDetails, userInfo]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {rating, comment}))\r\n    }\r\n    const reviewEditHandler = () => {\r\n\r\n    }\r\n    const reviewDeleteHandler = (e) => {\r\n        dispatch(productReviewDelete(match.params.id))\r\n    }\r\n\r\n    const checkWishList = () => {\r\n        return wishlist.find((item) => {\r\n            return item.product === match.params.id\r\n        })\r\n    }\r\n\r\n\r\n    const addToWishListHandler = () => {\r\n        if (isInWishlist) {\r\n            dispatch(removeFromWishList(match.params.id))\r\n        } else {\r\n            dispatch(addToWishList(match.params.id, 1))\r\n        }\r\n    }\r\n\r\n    const isInWishlist = checkWishList(match.params.id)\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go back\r\n            </Link>\r\n            {loading ? <Loader/>\r\n                : error ?\r\n                    <Message variant='danger'>\r\n                        {error}\r\n                    </Message> : (\r\n                        <>\r\n                            <Meta title={product.name}/>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <div className='header__cart__icon__product mx-3'\r\n                                         onClick={() => addToWishListHandler(product._id)}>\r\n                                        {isInWishlist ? <i className='fas fa-heart' style={{color: '#712b29'}}/> :\r\n                                            <i className='fas fa-heart'/>}\r\n                                    </div>\r\n                                    <Image src={product.image} alt={product.name} fluid/>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={product.numReviews} reviews/>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Price:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col>\r\n                                                            <Form.Control as='select' value={qty} onChange={(e) =>\r\n                                                                setQty(e.target.value)}>\r\n                                                                {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block' type='button'\r\n                                                    disabled={product.countInStock === 0}>\r\n                                                    Add To Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h2>Reviews</h2>\r\n                                    {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map(review => review.user !== null ? (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <div style={{display:'flex', flexDirection:'row', justifyContent: \"space-between\"}} >\r\n                                                    <div>\r\n                                                        <strong>{review.user.name} {review.user.surname}</strong>\r\n                                                        <Rating value={review.rating}/>\r\n                                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                        <p>{review.comment}</p></div>\r\n                                                    {review.user && userInfo._id === review.user._id && <div>\r\n                                                        <span style={{margin:'5px', cursor:'pointer'}} onClick={reviewEditHandler}><i className='fas fa-edit '/></span>\r\n                                                        <span style={{margin:'5px', cursor:'pointer'}} onClick={reviewDeleteHandler}><i className='fas fa-trash'/></span>\r\n                                                    </div>}\r\n                                                </div>\r\n                                            </ListGroup.Item>\r\n                                            ):null)}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Write a customer review</h2>\r\n                                            {errorProductReview &&\r\n                                            <Message variant='danger'>{errorProductReview}</Message>}\r\n                                            {userInfo ? (<Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control as='select' value={rating}\r\n                                                                  onChange={(e) => setRating(e.target.value)}>\r\n                                                        <option value=\"\">Select...</option>\r\n                                                        <option value=\"1\">1 - Poor</option>\r\n                                                        <option value=\"2\">2 - Fair</option>\r\n                                                        <option value=\"3\">3 - Good</option>\r\n                                                        <option value=\"4\">4 - Very Good</option>\r\n                                                        <option value=\"5\">5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Comment</Form.Label>\r\n                                                    <Form.Control as='textarea' row='3' value={comment}\r\n                                                                  onChange={(e) => setComment(e.target.value)}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Button type='submit' variant='primary'>\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>) : <Message>Please <Link to='/login'>sign in</Link> to write a\r\n                                                review</Message>}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\RegisterScreen.jsx",["223"],"import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../loaders/Loader\";\r\nimport {register} from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state => state.userRegister))\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/verify-email')\r\n        }\r\n    }, [history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match!')\r\n        } else {\r\n            dispatch(register(name, surname, email, password))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeHolder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='surname'>\r\n                    <Form.Label>Surname</Form.Label>\r\n                    <Form.Control\r\n                        type='surname'\r\n                        placeHolder='Enter surname'\r\n                        value={surname}\r\n                        onChange={(e) => setSurname(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeHolder='Enter mail'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeHolder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                   />\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeHolder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                   Register\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Already have an account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ShippingScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\CartScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProfileScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\UserListScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\PaymentMethodScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\LoginScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\PlaceOrderScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\UserEditScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\OrderListScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\OrderScreen.jsx",["224","225","226"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../loaders/Loader\";\r\nimport {Button, Card, Col, Image, ListGroup, Row} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getOrderDetails, payOrder, deliverOrder} from '../actions/orderActions'\r\nimport axios from \"axios\";\r\nimport {PayPalButton} from \"react-paypal-button-v2\";\r\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET, ORDER_CREATE_RESET} from \"../constants/orderConstants\";\r\nimport {resetCart, savePaymentMethod} from '../actions/cartActions';\r\nimport LoaderPayment from \"../loaders/LoaderPayment\";\r\nimport StripeContainer from \"../components/StripeContainer\";\r\n\r\n\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    const [showItem, setShowItem] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const {order, loading, error} = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const {loading: loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const {loading: loadingDeliver, success: successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    if (!loading) {\r\n        //Calculate price\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if (order && orderId !== order._id) {\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n        const addPayPalScript = async () => {\r\n            const {data: clientId} = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            }\r\n        } else {\r\n            setSdkReady(true)\r\n        }\r\n    }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n        dispatch(resetCart())\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    return loading ? <LoaderPayment/> : error ? <Message variant='danger'>{error}</Message> : <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p><strong>Name: </strong> {order.user.name} {order.user.surname}</p>\r\n                        <p><strong>Email: </strong><a href={`mailto:${order.user.email}`\r\n                        }>{order.user.email}</a></p>\r\n                        <p>\r\n                            <strong>Address: </strong>\r\n                            <span>{order.shippingAddress.address}</span>\r\n                            <span>{order.shippingAddress.city},</span>\r\n                            <span>{order.shippingAddress.postalCode},</span>\r\n                            <span>{order.shippingAddress.country}</span>\r\n                        </p>\r\n                        {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            : <Message variant='danger'>Not Delivered</Message>}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                        </p>\r\n                        {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            : <Message variant='danger'>Not Paid</Message>}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                            <ListGroup variant='flush'>\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={\r\n                                                    `/product/${item.product}`\r\n                                                }>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x $\r\n                                                {\r\n                                                    item.price\r\n                                                }\r\n                                                = $\r\n                                                {\r\n                                                    item.qty * item.price\r\n                                                }\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {!order.isPaid && order.paymentMethod === 'PayPal' && (\r\n                             <ListGroup.Item>\r\n                                {loadingPay && <Loader/>}\r\n                                {!sdkReady ? <Loader/> : (\r\n                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}/>)}\r\n\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        {!order.isPaid && order.paymentMethod === 'Stripe' && <ListGroup.Item>\r\n                            <StripeContainer />\r\n                            </ListGroup.Item>}\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                    Mark As Delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row></>\r\n\r\n}\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductEditScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\ProductListScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\WishListScreen.jsx",["227","228"],"import React, {useEffect, forwardRef} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Button, Col, Form, Image, ListGroup, Row} from 'react-bootstrap'\r\nimport FlipMove from 'react-flip-move';\r\nimport Message from '../components/Message'\r\nimport Product from \"../components/Product\";\r\nimport {addToWishList, removeFromWishList} from \"../actions/wishListActions\";\r\nimport {addToCart} from \"../actions/cartActions\";\r\n\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const wishlistStore = useSelector(state => state.productWishList)\r\n    const {wishlist} = wishlistStore;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToWishList(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromWishListHandler = (id) => {\r\n        dispatch (removeFromWishList(id))\r\n    }\r\n\r\n    const addToCartHandler = (productId) => {\r\n        history.push(`/cart/${productId}?qty=${qty}`)\r\n    }\r\n\r\n\r\n    forwardRef((item, ref) => (\r\n        <div ref={ref}>\r\n            <Product\r\n                key={item.cartId}\r\n                id={item.id}\r\n                title={item.name}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n                {...item}/>\r\n\r\n        </div>\r\n    ));\r\n\r\n    return<Row>\r\n        <Col md={10}>\r\n            <h1>Wishlist</h1>\r\n            {wishlist.length === 0 ?\r\n                (<Message>\r\n                        Your wishlist is empty! <Link to=\"/\">Go back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <Row variant='flush'>\r\n                        <FlipMove>\r\n                            {wishlist.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={3} className='m-auto'> <Link to={`/product/${item.product}`}>{item.name}</Link></Col>\r\n                                        <Col md={2} className='m-auto'>${item.price}</Col>\r\n                                        {/*<Col md={2}>*/}\r\n                                        {/*    <Form.Control as='select' value={item.qty} onChange={(e) =>*/}\r\n                                        {/*    dispatch(addToCart(item.product, Number(e.target.value)))}>*/}\r\n                                        {/*    {[...Array(item.countInStock).keys()].map((x) => (*/}\r\n                                        {/*        <option key={x + 1} value={x + 1}>*/}\r\n                                        {/*            {x + 1}*/}\r\n                                        {/*        </option>*/}\r\n                                        {/*    ))}*/}\r\n                                        {/*</Form.Control>*/}\r\n                                        {/*</Col>*/}\r\n                                        <Col md={2} className='m-auto'>\r\n                                            <Button\r\n                                                onClick={(e) => addToCartHandler(item.product)}\r\n                                                className='btn-block' type='button'\r\n                                                disabled={item.countInStock === 0}>\r\n                                                Buy now\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={1} className='m-auto'>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromWishListHandler(item.product)}>\r\n                                                <i className='fas fa-trash'/>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </FlipMove>\r\n                    </Row>\r\n                )}\r\n        </Col>\r\n\r\n\r\n    </Row>\r\n\r\n}\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\constants\\wishListConstants.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\wishListActions.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Paginate.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Meta.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Product.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Rating.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Message.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\ProductCarousel.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\SearchBox.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\FormContainer.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\ChecoutSteps.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\Favorites.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\loaders\\Loader.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\loaders\\LoaderPayment.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\screens\\VerifyEmailScreen.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\StripeContainer.jsx",[],"C:\\Users\\aby\\phpstorm projects\\EcommercePRO2021\\Ecommerce Fullstack - Development\\frontend\\src\\components\\PaymentForm.jsx",["229","230","231"],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":23,"column":5,"nodeType":"238","messageId":"239","endLine":23,"endColumn":34},{"ruleId":"236","severity":1,"message":"240","line":24,"column":5,"nodeType":"238","messageId":"239","endLine":24,"endColumn":34},{"ruleId":"236","severity":1,"message":"241","line":25,"column":5,"nodeType":"238","messageId":"239","endLine":25,"endColumn":31},{"ruleId":"236","severity":1,"message":"242","line":26,"column":5,"nodeType":"238","messageId":"239","endLine":26,"endColumn":32},{"ruleId":"236","severity":1,"message":"243","line":10,"column":38,"nodeType":"238","messageId":"239","endLine":10,"endColumn":67},{"ruleId":"236","severity":1,"message":"244","line":9,"column":8,"nodeType":"238","messageId":"239","endLine":9,"endColumn":25},{"ruleId":"236","severity":1,"message":"245","line":11,"column":20,"nodeType":"238","messageId":"239","endLine":11,"endColumn":37},{"ruleId":"236","severity":1,"message":"246","line":21,"column":12,"nodeType":"238","messageId":"239","endLine":21,"endColumn":20},{"ruleId":"236","severity":1,"message":"247","line":21,"column":22,"nodeType":"238","messageId":"239","endLine":21,"endColumn":33},{"ruleId":"236","severity":1,"message":"248","line":4,"column":22,"nodeType":"238","messageId":"239","endLine":4,"endColumn":26},{"ruleId":"236","severity":1,"message":"249","line":9,"column":9,"nodeType":"238","messageId":"239","endLine":9,"endColumn":18},{"ruleId":"236","severity":1,"message":"250","line":3,"column":9,"nodeType":"238","messageId":"239","endLine":3,"endColumn":15},{"ruleId":"236","severity":1,"message":"245","line":4,"column":20,"nodeType":"238","messageId":"239","endLine":4,"endColumn":37},{"ruleId":"236","severity":1,"message":"251","line":58,"column":15,"nodeType":"238","messageId":"239","endLine":58,"endColumn":22},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'PRODUCT_UPDATE_REVIEW_REQUEST' is defined but never used.","Identifier","unusedVar","'PRODUCT_UPDATE_REVIEW_SUCCESS' is defined but never used.","'PRODUCT_UPDATE_REVIEW_FAIL' is defined but never used.","'PRODUCT_UPDATE_REVIEW_RESET' is defined but never used.","'PRODUCT_REVIEW_DELETE_SUCCESS' is defined but never used.","'VerifyEmailScreen' is defined but never used.","'savePaymentMethod' is defined but never used.","'showItem' is assigned a value but never used.","'setShowItem' is assigned a value but never used.","'Form' is defined but never used.","'addToCart' is defined but never used.","'Button' is defined but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]